name: Create release tag on master

on:
  push:
    branches: [ master ]

jobs:
  create-release:
    name: üìå Create release tag on master
    runs-on: judong
    timeout-minutes: 30
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üõ†Ô∏è Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: üßπ Remove settings.xml
        run: rm $HOME/.m2/settings.xml || true

      - name: üõ†Ô∏è Setup maven settings.xml
        uses: whelk-io/maven-settings-xml-action@v21
        with:
          servers: >
            [
                {
                    "id": "judong-nexus-mirror",
                    "username": "${{ secrets.JUDONG_NEXUS_USERNAME }}",
                    "password": "${{ secrets.JUDONG_NEXUS_PASSWORD }}"
                },
                {
                    "id": "judong-nexus-distribution",
                    "username": "${{ secrets.JUDONG_NEXUS_USERNAME }}",
                    "password": "${{ secrets.JUDONG_NEXUS_PASSWORD }}"
                },
                {
                    "id": "ossrh",
                    "username": "${{ secrets.SONATYPE_USERNAME }}",
                    "password": "${{ secrets.SONATYPE_PASSWORD }}"
                }
            ]
          mirrors: >
            [
                {
                    "id": "judong-nexus-mirror",
                    "mirrorOf": "*",
                    "url": "https://nexus.judo.technology/repository/maven-judong/"
                }
            ]

      - name: üî¢ Calculate version number
        id: version
        run: |-
          POM_VERSION=$(./mvnw org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dtycho.mode=maven -DskipModules=true -Dexpression=project.version -q -DforceStdout)
          if [[ "${POM_VERSION}" == *-SNAPSHOT ]]; then
            BASE_VERSION=$(echo "${POM_VERSION}" | cut -d'-' -f 1)
          else
            BASE_VERSION=${POM_VERSION}
          fi
          if [[ "${{ github.base_ref }}" == "master" ]]; then
            VERSION_NUMBER=${BASE_VERSION}
          else
            TAG_NAME=$(echo "${{ steps.context.outputs.branch }}" | cut -d ' ' -f2 | tr '#\/\.-' '_')
          fi
          echo "Version from POM: ${POM_VERSION}"
          echo "Base version from POM: ${BASE_VERSION}"
          echo "version=${BASE_VERSION}" >> $GITHUB_OUTPUT

      - name: üèóÔ∏è Build Changelog
        id: create_changelog
        uses: mikepenz/release-changelog-builder-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          toTag: v${{ steps.version.outputs.version }}

      - name: üìñ Create release
        if: |-
          ${{ always() && 
          (startsWith(github.head_ref, 'develop') || github.ref == 'refs/heads/develop') && 
          job.status == 'success' }}
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: v${{ steps.version.outputs.version }}
          tag: v${{ steps.version.outputs.version }}
          generateReleaseNotes: false
          draft: true
          prerelease: true
          body: |-
            To install add the following P2 repository:
            =======================================
            
            In maven (with tycho):
             ---------------------------
            ```
            <repository>
            <id>judo-epp-commons</id>
            <url>mvn:hu.blackbelt.judo.eclipse.epp:hu.blackbelt.judo.eclipse.epp.package.common.site:${{ steps.version.outputs.version }}:zip</url>
            <layout>p2</layout>
            </repository>
            ```
            
            In Eclipse (with m2e):
            --------------------------
            Use the following form in Eclipse in the `Install new software...' menu:
            
            `mvn:hu.blackbelt.judo.eclipse.epp:hu.blackbelt.judo.eclipse.epp.package.common.site:${{ steps.version.outputs.version }}:zip`
            
            Changelog:
            --------------
            ${{steps.create_changelog.outputs.changelog}}

      - name: üì¢ Send error to discord
        uses: sarisia/actions-status-discord@v1
        if: ${{ always() && job.status == 'failure' }}
        with:
          webhook: ${{ secrets.JUDONG_DISCORD_WEBHOOK }}
          title: "Github action"
          description: ":x: Could not trigger github release! https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
